#arquivo views

def resultados(request):
    resultados = Resultados.objects.all()

    # Resultados gerais
    resultados_gerais = []
    for piloto in Piloto.objects.all():
        tempo_total = sum(resultado.tempo_volta.total_seconds() for resultado in resultados.filter(numero_piloto=piloto.numero_piloto))
        tempo_total_str = '{:02d}:{:02d}:{:06.3f}'.format(int(tempo_total // 3600), int((tempo_total % 3600) // 60), (tempo_total % 60))
        resultados_gerais.append({'piloto': piloto, 'numero_piloto': piloto.numero_piloto, 'tempo_total': tempo_total_str})
    resultados_gerais = sorted(resultados_gerais, key=lambda x: x['tempo_total'])

    # Resultados por categoria
    categorias = ['Over_50', 'Over_40', 'pro']
    resultados_por_categoria = {categoria: [] for categoria in categorias}
    resultados_dict = {categoria: resultados.filter(categoria=categoria) for categoria in categorias}

    tempo_total_por_piloto = {}
    for categoria, resultados_categoria in resultados_dict.items():
        for resultado in resultados_categoria:
            if resultado.nome not in [res['nome'] for res in resultados_por_categoria[categoria]] and resultado.numero_piloto not in [res['numero_piloto'] for res in resultados_por_categoria[categoria]]:
                if resultado.numero_piloto not in tempo_total_por_piloto:
                    tempo_total_por_piloto[resultado.numero_piloto] = sum(res.tempo_volta.total_seconds() for res in resultados_dict[categoria].filter(numero_piloto=resultado.numero_piloto))
                    tempo_total_por_piloto_str = '{:02d}:{:02d}:{:06.3f}'.format(int(tempo_total_por_piloto[resultado.numero_piloto] // 3600), 
                                                                            int((tempo_total_por_piloto[resultado.numero_piloto] % 3600) // 60),
                                                                            tempo_total_por_piloto[resultado.numero_piloto] % 60)
                    resultados_por_categoria[categoria].append({'nome': resultado.nome, 'numero_piloto': resultado.numero_piloto, 'tempo_total': tempo_total_por_piloto_str})

        resultados_por_categoria[categoria] = sorted(resultados_por_categoria[categoria], key=lambda x: x['tempo_total'])

    return render(request, 'resultados.html', {'resultados_gerais': resultados_gerais,
                                                'resultados_por_categoria': resultados_por_categoria})

#arquivo resultados.html

[<h1>Resultado Geral</h1>
<table>
  <thead>
    <tr>
      <th>Classificação</th>
      <th>Piloto</th>
      <th>Tempo Total</th>
    </tr>
  </thead>
  <tbody>
    {% for position, piloto in resultados_gerais %}
      <tr>
        <td>{{ position }}</td>
        <td>{{ piloto.piloto.nome }} (#{{ piloto.numero_piloto }})</td>
        <td>{{ piloto.tempo_total }}</td>
      </tr>
    {% endfor %}
  </tbody>
</table>

{% for categoria, resultados_categoria in resultados_por_categoria.items %}
  <h1>Categoria {{ categoria }}</h1>
  <table>
    <thead>
      <tr>
        <th>Classificação</th>
        <th>Piloto</th>
        <th>Tempo Total</th>
      </tr>
    </thead>
    <tbody>
      {% for position, resultado in resultados_categoria %}
        <tr>
          <td>{{ position }}</td>
          <td>{{ resultado.nome }} (#{{ resultado.numero_piloto }})</td>
          <td>{{ resultado.tempo_total }}</td>
        </tr>
      {% endfor %}
    </tbody>
  </table>
{% endfor %}]
