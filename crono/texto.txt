#arquivo models.py

from django.db import models
from django.utils import timezone

class Piloto(models.Model):
    nome = models.CharField(max_length=100)
    numero_piloto= models.IntegerField(default=None)
    moto =  models.CharField(max_length=100)
    categoria = models.CharField(max_length=100)

    def __str__(self):
        return f"{self.nome} ({self.numero_piloto})"


class RegistrarLargada(models.Model):
    id_volta = models.AutoField(primary_key=True)
    numero_piloto = models.ForeignKey(Piloto, on_delete=models.CASCADE, related_name='largadas')
    horario_largada = models.TimeField(null=True, blank=True)


class RegistrarChegada(models.Model):
    id_volta = models.AutoField(primary_key=True)
    numero_piloto = models.ForeignKey(Piloto, on_delete=models.CASCADE, related_name='chegadas')
    horario_chegada = models.TimeField(null=True, blank=True)


class DadosCorrida(models.Model):
    nome = models.CharField(max_length=100)
    numero_piloto = models.ForeignKey(Piloto, on_delete=models.CASCADE, related_name='chegadas')
    moto =  models.CharField(max_length=100)
    categoria = models.CharField(max_length=100)
    id_volta = models.AutoField(primary_key=True)
    horario_largada = models.TimeField(null=True, blank=True)
    horario_chegada = models.TimeField(null=True, blank=True)
    tempo_volta = models.DurationField(null=True, blank=True)
    tempo_total = models.DurationField(null=True, blank=True)

    def __str__(self):
        return f"{self.nome} ({self.numero_piloto})"
    


#arquivo views.py

from django.shortcuts import render, redirect
from crono.models import Piloto, RegistrarLargada, RegistrarChegada,Resultados, DadosCorrida
from django.contrib import messages
from django.db.models import Q
from datetime import datetime, timedelta, timezone, date
from crono.forms import RegistrarLargadaForm, RegistrarChegadaForm, CadastrarPilotoForm
from django.shortcuts import get_object_or_404

def cadastrar_piloto(request):
    if request.method == 'POST':
        form = CadastrarPilotoForm(request.POST)
        if form.is_valid():
            nome = form.cleaned_data['nome']
            numero_piloto = form.cleaned_data['numero_piloto']
            moto = form.cleaned_data['moto']
            categoria = form.cleaned_data['categoria']
        
        # Verifica se já existe um piloto com o mesmo nome ou número
            if Piloto.objects.filter(Q(nome=nome) | Q(numero_piloto=numero_piloto)).exists():
                messages.error(request, 'Já existe um piloto com esse nome ou número.')
            else:
                piloto = Piloto(nome=nome, numero_piloto=numero_piloto, moto=moto, categoria=categoria)
                piloto.save()
                messages.success(request, 'Piloto cadastrado com sucesso.')
                return redirect('cadastrar_piloto')
            
    else:
        form = CadastrarPilotoForm()

    return render(request, 'cadastrar_piloto.html', {'form': form})


def registrar_largada(request):
    if request.method == 'POST':
        form = RegistrarLargadaForm(request.POST)
        if form.is_valid():
            numero_piloto = form.cleaned_data['numero_piloto']
            piloto = get_object_or_404(Piloto, numero_piloto=numero_piloto)
            agora = datetime.now().strftime('%H:%M:%S.%f')[:-3]
            largada= RegistrarLargada(numero_piloto=piloto, horario_largada= agora )
            largada.save()
            messages.success(request, 'Horário de largada cadastrado com sucesso')
            return redirect('registrar_largada')
    else:        
        form = RegistrarLargadaForm()

    return render(request, 'registrar_largada.html', {'form': form})


def registrar_chegada(request):
    numero_piloto = None
    if request.method == 'POST':
        form = RegistrarChegadaForm(request.POST)
        if form.is_valid():
            numero_piloto = form.cleaned_data['numero_piloto']
            piloto = get_object_or_404(Piloto, numero_piloto=numero_piloto)
            agora = datetime.now().strftime('%H:%M:%S.%f')[:-3]
            chegada = RegistrarChegada(numero_piloto=piloto, horario_chegada=agora)
            chegada.save()

            messages.success(request, 'Horário de chegada cadastrado com sucesso')

           
            save_resultados()
           
            return redirect('registrar_chegada')

    else:
        form = RegistrarChegadaForm()

    return render(request, 'registrar_chegada.html', {'form': form})



